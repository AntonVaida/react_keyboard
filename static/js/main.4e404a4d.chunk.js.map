{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKey","pressKey","event","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,MAFb,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,YAV5C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,KAAKR,MAAMC,QAAX,mCAC6BO,KAAKR,MAAMC,QADxC,KAGC,kCAxBZ,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.4e404a4d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  lastKey: number | string | null,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    lastKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  pressKey = (event:KeyboardEvent) => {\n    this.setState({ lastKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.lastKey ? (\n            `The last pressed key is [${this.state.lastKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}