{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKey","pressKeyHandler","event","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,mBAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,mBAV5C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAO,mCACsBA,EADtB,KAGN,kCA1BZ,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.8e1f5a4b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  lastKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    lastKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKeyHandler);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.pressKeyHandler);\n  }\n\n  pressKeyHandler = (event:KeyboardEvent) => {\n    this.setState({ lastKey: event.key });\n  };\n\n  render() {\n    const { lastKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastKey ? (\n            `The last pressed key is [${lastKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}